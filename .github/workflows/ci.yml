name: CI Pipeline

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  REGISTRY: ghcr.io
  IMAGE_OWNER: ${{ github.repository_owner }}
  JAVA_VERSION: '21'

jobs:
  build-test:
    name: Build & Test (Gradle)
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK ${{ env.JAVA_VERSION }}
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: ${{ env.JAVA_VERSION }}

      - name: Grant execute permission for Gradlew
        run: chmod +x ./gradlew

      - name: Build and run tests
        run: ./gradlew clean build --no-daemon

  docker-build:
    name: Docker Build & Push (per service)
    needs: build-test
    runs-on: ubuntu-latest

    strategy:
      matrix:
        service: [ "gateway", "services/monitor-service" ]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.CR_PAT }}

      - name: Build and push Docker image
        run: |
          OWNER_LC=$(echo "${{ env.IMAGE_OWNER }}" | tr '[:upper:]' '[:lower:]')
          SERVICE_NAME=$(basename "${{ matrix.service }}")
          IMAGE_NAME="${{ env.REGISTRY }}/${OWNER_LC}/alertify-${SERVICE_NAME}"
          echo "Building image: $IMAGE_NAME:latest"
          docker build -t "$IMAGE_NAME:latest" -f "${{ matrix.service }}/Dockerfile" .
          docker push "$IMAGE_NAME:latest"