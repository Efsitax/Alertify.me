server:
  port: 8082

spring:
  application:
    name: worker-service

  datasource:
    url: jdbc:postgresql://localhost:5432/alertify_worker
    username: postgres
    password: 1234
    driver-class-name: org.postgresql.Driver

  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true

  kafka:
    bootstrap-servers: localhost:9092
    admin:
      auto-create: true
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
    consumer:
      group-id: alertify-worker
      auto-offset-reset: earliest
    properties:
      spring.json.add.type.headers: false

services:
  monitor-service:
    url: ${MONITOR_SERVICE_URL:http://localhost:8080}
  fetcher-service:
    url: ${FETCHER_SERVICE_URL:http://localhost:8081}

worker:
  schedule:
    interval: ${WORKER_SCHEDULE_INTERVAL:60000}
  fetcher:
    mode: ${FETCHER_MODE:mock}
    mock:
      failure-rate: 0.05
      delay-min: 100
      delay-max: 500
      price-volatility: 0.02
    http:
      timeout: 10000
      retry-attempts: 3
      circuit-breaker-threshold: 5

management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
  endpoint:
    health:
      show-details: always
    prometheus:
      enabled: true
  prometheus:
    metrics:
      export:
        enabled: true

kafka:
  topics:
    alerts: alert.created

logging:
  level:
    root: INFO
    com.alertify.worker: DEBUG
    org.springframework.web: WARN

resilience4j:
  circuitbreaker:
    instances:
      monitor-service:
        registerHealthIndicator: true
        slidingWindowSize: 10
        permittedNumberOfCallsInHalfOpenState: 3
        slidingWindowType: COUNT_BASED
        minimumNumberOfCalls: 5
        waitDurationInOpenState: 30s
        failureRateThreshold: 50
        eventConsumerBufferSize: 10
      fetcher-service:
        registerHealthIndicator: true
        slidingWindowSize: 10
        permittedNumberOfCallsInHalfOpenState: 3
        slidingWindowType: COUNT_BASED
        minimumNumberOfCalls: 5
        waitDurationInOpenState: 30s
        failureRateThreshold: 50
        eventConsumerBufferSize: 10
  retry:
    instances:
      monitor-service:
        maxAttempts: 3
        waitDuration: 1s
        retryExceptions:
          - org.springframework.web.reactive.function.client.WebClientRequestException
          - java.net.ConnectException
          - java.net.SocketTimeoutException
      fetcher-service:
        maxAttempts: 3
        waitDuration: 1s
        retryExceptions:
          - org.springframework.web.reactive.function.client.WebClientRequestException
          - java.net.ConnectException
          - java.net.SocketTimeoutException
  timelimiter:
    instances:
      monitor-service:
        timeoutDuration: 10s
      fetcher-service:
        timeoutDuration: 10s